//
// 수학, 구현
// 가지컵 b번과 똑같음(x,아니다. 3번자르는거로 4개가 아니라 6개 가능)
// 
// 딱 맞출 필요없이, 1번의 칼질로 가장 많은 케이크 조각 수 만들어 내면 됨
// 
// 계속 전에 잘랐던 방향과 수직하게 자르는게 가장 많이 늘어남 (x, 다른 방식으로 나누어야 하나)
// 
// 0 : 1
// 1 : 2
// 2 : 4
// 3 : 6
// 4 : 9
// 5 : 12
// 6 : 16
//
// 이진 탐색
// n번의 칼질이 있다면 나오는 조각수 = 
// n이 짝수 : (n/2+1)^2
// n이 홀수 : (n/2+1)*(n/2+2) = 
//
// 자르는 수가 5e9되면 long long 범위 안 넘고
// 1e18도 표현 가능
// 
// 
// 정사각형
// n번 자를 때
// 
// 피자 자를 때 처럼, *모양으로 자르기
// 무조건 2^n번 자를 필요 없음
// 0. 1. *2*. 3, *4*. 5, 6,  7,  *8*, 9, 10, 11, 12, 13, 14 ..  *16*
// 1, 2,   4, 4,   8, 4, 8,  12,  16, 4,  8, 12, 16, 20, 24 ..    32
//								
//
// n 
// a, n이하 2의 거듭제곱 수
// a/2 - (a-n)/4
//
//#include <iostream>
//
//
//using LL = long long;
//
//int main() {
//	std::ios::sync_with_stdio(false);
//	std::cin.tie(nullptr);
//	
//	LL n;
//	std::cin >> n;
//
//	if (n == 1) {
//		std::cout << 0;
//
//	}
//	else {
//		std::cout << (n+1)/2;
//	}
//	
//	return 0;
//}
